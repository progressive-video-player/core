class Player extends HTMLElement{static get observedAttributes(){return["src"]}constructor(){super(),this.parent=null,this.elem=document.createElement("video"),this.plugins={video:new Set,skin:new Set,ad:new Set},this.activePlugins={video:null}}connectedCallback(){this.parent=this.parentNode}disconnectedCallback(){this.parent=null}attributeChangedCallback(e,t,i){if(t!==i)if("src"===e){if(!this.parent||!this.hasChildNodes())return;const e=this.activePlugins.video;if(e&&(e.unloadVideo(),this.activePlugins.video=null),!i)return;const t=this.childNodes;for(let e=0;e<t.length;e++){const s=t[e];if("function"==typeof s.loadVideo&&s.loadVideo(this.elem,i)){this.activePlugins.video=s;break}}}else"controls"===e||this.elem.setAttribute(e,i)}addEventListener(...e){this.elem.addEventListener(...e)}removeEventListener(...e){this.elem.removeEventListener(...e)}registerPlugin(e,t){const i=this.plugins[e];if(!i)return;if(i.add(t),"video"!==e||this.activePlugins.video)return;const s=this.getAttribute("src");s&&t.loadVideo(this.elem,s)&&(this.activePlugins.video=t)}unregisterPlugin(e,t){const i=this.plugins[e];i&&(this.activePlugins.video===t&&t.unloadVideo(),i.delete(t))}}if(!customElements)throw new Error("Custom Elements not supported");const name="progressive-video-player";customElements.get(name)?console.log(`Custom element "${name}" already defined`):customElements.define(name,Player);
//# sourceMappingURL=player-core.mjs.map